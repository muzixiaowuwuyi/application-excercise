openapi: 3.0.3
info:
  title: Blog challenge API
  description: |-
    This is the API design for coding challenges for BRBase
  contact:
    email: guangzheng.li2018@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: blog
    description: Create, read, update and delete blogs
paths:
  /blog:
    get:
      tags:
        - blog
      summary: Retrieve a list of blogs
      operationId: listBlog
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlogResponse"
    post:
      tags:
        - blog
      summary: Add a new blog entry
      description: Add a new blog entry
      operationId: addBlog
      requestBody:
        description: Create a new blog entry
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogRequest"
        required: true
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogResponse"
  /blog/{blogId}:
    get:
      tags:
        - blog
      summary: Find blog entry by ID
      description: Returns a blog entry
      operationId: getBlogEntry
      parameters:
        - name: blogId
          in: path
          description: ID of blog to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogResponse"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
    patch:
      tags:
        - blog
      summary: Update an existing blog entry
      description: Update an existing blog by Id
      operationId: updateBlog
      parameters:
        - name: blogId
          in: path
          description: ID of blog to return
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent blog entry
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogRequest"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogResponse"
        "400":
          description: Invalid ID supplied
        "404":
          description: Blog not found
    delete:
      tags:
        - blog
      summary: Deletes a blog entry
      description: delete a blog entry
      operationId: deleteBlog
      parameters:
        - name: blogId
          in: path
          description: Blog id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: successful operaion
        "400":
          description: Invalid id value
components:
  schemas:
    BlogResponse:
      required:
        - title
        - content
      type: object
      properties:
        id:
          type: string
        title:
          type: string
          example: blog title
        content:
          type: string
          example: some content
        createdAt:
          type: string
          format: date
          description: time created
        updatedAt:
          type: string
          format: date
          description: time updated
    BlogRequest:
      required:
        - title
        - content
      type: object
      properties:
        title:
          type: string
          example: blog title
        content:
          type: string
          example: some content
